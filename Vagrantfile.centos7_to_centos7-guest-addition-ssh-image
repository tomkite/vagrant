# -*- mode: ruby -*-
# vi: set ft=ruby :
# description:
#   source: centos/7 
#   addition: guest addition, ssh key tom_rsa.pub
#   target: centos7-guest-addition-ssh-image

barebone_name = "barebone"
barebone_ip = "192.168.10.10"

yum_update = <<-eos
   echo "SCRIPT BEGIN: yum_update"
   yum update
   yum install -y epel-release
   yum makecache
   echo "SCRIPT END: yum_update"
eos

build_guest_addition = <<-eos
   echo "SCRIPT BEGIN: build_guest_addition"
   curl -O http://download.virtualbox.org/virtualbox/4.3.30/VBoxGuestAdditions_4.3.30.iso
   mkdir /media/VBoxGuestAdditions
   mount -o loop,ro VBoxGuestAdditions_4.3.30.iso /media/VBoxGuestAdditions
   # yum install -y kernel-devel-3.10.0-229.el7.x86_64 bzip2 gcc
   yum install -y kernel-devel-3.10.0-229.14.1.el7.x86_64 bzip2 gcc
   sh /media/VBoxGuestAdditions/VBoxLinuxAdditions.run
   rm VBoxGuestAdditions_4.3.30.iso
   umount /media/VBoxGuestAdditions
   rmdir /media/VBoxGuestAdditions
   # yum remove -y kernel-devel-3.10.0-229.el7.x86_64 gcc
   echo "SCRIPT END: build_guest_addition"
eos

cleanup = <<-eos
   echo "SCRIPT BEGIN: cleanup"
   yum remove -y kernel-devel-3.10.0-229.14.1.el7.x86_64 bzip2 gcc
   dd if=/dev/zero of=/empty bs=1M
   rm -f /empty
   rm -rf /tmp/* /var/log/*
   echo "SCRIPT END: cleanup"
eos

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "centos/7"
  config.vm.hostname = barebone_name
  config.vm.network "private_network", ip: barebone_ip
  config.vm.provision "shell", privileged: true, inline: yum_update
  config.vm.provision "shell", privileged: true, inline: build_guest_addition
  config.vm.provision "shell", privileged: true, inline: cleanup

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   sudo apt-get update
  #   sudo apt-get install -y apache2
  # SHELL
end
